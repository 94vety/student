[{"/Users/wuliangrui/Desktop/库里泡/item/student/src/index.js":"1","/Users/wuliangrui/Desktop/库里泡/item/student/src/App.js":"2","/Users/wuliangrui/Desktop/库里泡/item/student/src/components/Login/index.js":"3","/Users/wuliangrui/Desktop/库里泡/item/student/src/components/Home/index.js":"4","/Users/wuliangrui/Desktop/库里泡/item/student/src/components/Home/Header/index.js":"5","/Users/wuliangrui/Desktop/库里泡/item/student/src/components/Person/index.js":"6","/Users/wuliangrui/Desktop/库里泡/item/student/src/components/Home/BookKind/index.js":"7","/Users/wuliangrui/Desktop/库里泡/item/student/src/components/Home/Books/index.js":"8","/Users/wuliangrui/Desktop/库里泡/item/student/src/components/Person/User/index.js":"9","/Users/wuliangrui/Desktop/库里泡/item/student/src/components/Person/Book/index.js":"10","/Users/wuliangrui/Desktop/库里泡/item/student/src/store/index.js":"11","/Users/wuliangrui/Desktop/库里泡/item/student/src/services/index.js":"12","/Users/wuliangrui/Desktop/库里泡/item/student/src/utils/request.js":"13","/Users/wuliangrui/Desktop/库里泡/item/student/src/components/ReturnBook/index.js":"14","/Users/wuliangrui/Desktop/库里泡/item/student/src/utils/tools.js":"15"},{"size":476,"mtime":1644155987364,"results":"16","hashOfConfig":"17"},{"size":549,"mtime":1646034101663,"results":"18","hashOfConfig":"17"},{"size":6744,"mtime":1646569790493,"results":"19","hashOfConfig":"17"},{"size":493,"mtime":1645177157916,"results":"20","hashOfConfig":"17"},{"size":2508,"mtime":1646451533578,"results":"21","hashOfConfig":"17"},{"size":1995,"mtime":1646459459758,"results":"22","hashOfConfig":"17"},{"size":1064,"mtime":1645589762018,"results":"23","hashOfConfig":"17"},{"size":3145,"mtime":1646711562338,"results":"24","hashOfConfig":"17"},{"size":10246,"mtime":1646714273005,"results":"25","hashOfConfig":"17"},{"size":8826,"mtime":1646713805410,"results":"26","hashOfConfig":"17"},{"size":7265,"mtime":1646714540487,"results":"27","hashOfConfig":"17"},{"size":1161,"mtime":1646376630376,"results":"28","hashOfConfig":"17"},{"size":3171,"mtime":1646406363173,"results":"29","hashOfConfig":"17"},{"size":2875,"mtime":1646714691515,"results":"30","hashOfConfig":"17"},{"size":1460,"mtime":1646713074434,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"ydrezv",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},"/Users/wuliangrui/Desktop/库里泡/item/student/src/index.js",[],[],["90","91"],"/Users/wuliangrui/Desktop/库里泡/item/student/src/App.js",[],[],"/Users/wuliangrui/Desktop/库里泡/item/student/src/components/Login/index.js",["92"],[],"import React, { useState } from \"react\";\nimport {\n    Form, Input,\n    Button,\n} from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport myStore from \"../../store\";\nimport \"./index.css\";\n\nconst FormItem = Form.Item;\nconst { Password: InputPassword } = Input;\n\nfunction Login() {\n    const formRef = React.createRef();\n    const [status, setStatus] = useState(true);\n    const navigate = useNavigate();\n\n    const handleRegister = () => {\n        setStatus(!status);\n        formRef.current.resetFields();\n    }\n\n    const handleClickLogin = async(value) => {\n        const result = await myStore.login(value);\n        formRef.current.resetFields();\n\n        if (result) {\n            navigate(\"/home\");\n        }\n    }\n\n    const handleClickRegister = async(value) => {\n        const result = await myStore.register({\n            ...value,\n            allow: true\n        })\n        formRef.current.resetFields();\n\n        if (result) {\n            navigate(\"/home\");\n        }\n    }\n\n    return (\n        <div className=\"login\">\n            <div className=\"content\">\n                <div className=\"header\">\n                    <div>图书管理系统</div>\n                </div>\n                {status\n                    ? (<Form\n                        name=\"basic\"\n                        labelCol={{ span: 6 }}\n                        wrapperCol={{ span: 17 }}\n                        ref={formRef}\n                        onFinish={handleClickLogin}\n                        autoComplete=\"off\"\n                        initialValues={{\n                            \"username\": \"\",\n                            \"password\": \"\",\n                            \"rePassword\": \"\",\n                            \"email\": \"\"\n                        }}\n                    >\n                        <FormItem\n                            label=\"用户名\"\n                            name=\"username\"\n                            className=\"form-login\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input your username!'\n                                    }\n                                ]\n                            }\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label=\"密码\"\n                            name=\"password\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input your password!'\n                                    }\n                                ]\n                            }\n                        >\n                            <InputPassword />\n                        </FormItem>\n                        <FormItem\n                            wrapperCol={{ offset: 10, span: 14 }}\n                        >\n                            <Button\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                            >\n                                登陆\n                            </Button>\n                        </FormItem>\n                    </Form>)\n                    : (<Form\n                        name=\"basic\"\n                        labelCol={{ span: 6 }}\n                        wrapperCol={{ span: 17 }}\n                        ref={formRef}\n                        onFinish={handleClickRegister}\n                        autoComplete=\"off\"\n                    >\n                        <FormItem\n                            label=\"用户名\"\n                            name=\"username\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input your username!'\n                                    }\n                                ]\n                            }\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label=\"密码\"\n                            name=\"password\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input your password!'\n                                    }\n                                ]\n                            }\n                        >\n                            <InputPassword />\n                        </FormItem>\n                        <FormItem\n                            label=\"确认密码\"\n                            name=\"password2\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input your password!'\n                                    }\n                                ]\n                            }\n                        >\n                            <InputPassword />\n                        </FormItem>\n                        <FormItem\n                            label=\"邮箱\"\n                            name=\"email\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input your password!'\n                                    }\n                                ]\n                            }\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            wrapperCol={{ offset: 6, span: 17 }}\n                        >\n                            <Button\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                            >\n                                注册\n                            </Button>\n                        </FormItem>\n                    </Form>)}\n                <div className=\"footer\">\n                    <a\n                        className=\"register\"\n                        onClick={handleRegister}\n                    >{status ? '注册' : '登陆'}</a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Login;\n","/Users/wuliangrui/Desktop/库里泡/item/student/src/components/Home/index.js",[],[],"/Users/wuliangrui/Desktop/库里泡/item/student/src/components/Home/Header/index.js",[],[],["93","94"],"/Users/wuliangrui/Desktop/库里泡/item/student/src/components/Person/index.js",[],[],"/Users/wuliangrui/Desktop/库里泡/item/student/src/components/Home/BookKind/index.js",["95"],[],"import { useEffect } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport myStore from \"../../../store\";\nimport \"./index.css\";\n\nfunction BookKind() {\n    useEffect(() => {\n        myStore.booksKindRequest();\n    }, [])\n\n    const styleClass = (index) => {\n        switch (index % 4) {\n            case 0: return \"kind-book one\";\n            case 1: return \"kind-book two\";\n            case 2: return \"kind-book three\";\n            case 3: return \"kind-book five\"\n        }\n    }\n\n    const handleKind = (id) => {\n        myStore.booksKindSearchRequest({\n            category: id,\n            page: 1\n        });\n    }\n\n    return (\n        <div className=\"kind\">\n            {\n                myStore.booksKindData.map((item, index) => {\n                    return <div\n                        key={item.id}\n                        className={styleClass(index)}\n                        onClick={() => handleKind(item.id)}\n                    >{item.name}</div>\n                })\n            }\n        </div>\n    )\n}\n\nexport default observer(BookKind);","/Users/wuliangrui/Desktop/库里泡/item/student/src/components/Home/Books/index.js",["96"],[],"/Users/wuliangrui/Desktop/库里泡/item/student/src/components/Person/User/index.js",["97"],[],"import React, { useState, useEffect } from \"react\";\nimport {\n    Input, Form,\n    Button, message,\n    Empty\n} from \"antd\";\nimport { observer } from \"mobx-react-lite\";\nimport myStore from \"../../../store\";\nimport \"./index.css\";\n\nconst { Password: InputPassword } = Input;\n\nfunction User() {\n    const formRef = React.createRef()\n    const [display, setDisplay] = useState(\"find\");\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [id, setId] = useState(\"\");\n\n    useEffect(() => {\n        myStore.getUsersRequest();\n    }, [])\n\n    const handleOperation = async(name, email, id) => {\n        await setName(name);\n        await setEmail(email);\n        await setId(id);\n        setDisplay(\"resive\");\n        myStore.modifySwitchStatus(false);\n    }\n\n    const handleAddUser = () => {\n        setDisplay(\"add\");\n    }\n\n    const handleConfirm = async (value) => {\n        if (display === \"add\") {\n            const {\n                username, password,\n                email, rePassword\n            } = value;\n\n            if (password === rePassword) {\n                await myStore.addUserRequest({\n                    username,\n                    password,\n                    email\n                });\n                myStore.modifySwitchStatus(true);\n                myStore.getUsersRequest();\n    \n                setDisplay(\"find\");\n            } else {\n                message.warn(\"确认密码与密码不一致\");\n            }\n        } else if (display === \"resive\") {\n            await myStore.modifyUserRequest({\n                ...value\n            }, id);\n            myStore.modifySwitchStatus(true);\n            myStore.getUsersRequest();\n\n            setDisplay(\"find\");\n        }\n    }\n\n    const handleDeleteUser = () => {\n        myStore.deleteUserRequest(id);\n        myStore.modifySwitchStatus(true);\n        setDisplay(\"find\");\n    }\n\n    return (\n        <div className=\"content\">\n            {(() => {\n                switch (display) {\n                    case \"find\": return <>\n                        <div className=\"users\">\n                            {\n                                myStore.usersListData.length === 0\n                                    ? <Empty\n                                        className=\"user-empty\"\n                                        description=\"没有数据\"\n                                        image={Empty.PRESENTED_IMAGE_SIMPLE}\n                                    />\n                                    : myStore.usersListData.map(item => {\n                                        const { username, email, id } = item;\n                                        return <div className=\"users-item\" key={id}>\n                                            <div className=\"user-item\">\n                                                <div className=\"user-label\">用户名：</div>\n                                                <div className=\"user-name\">{username}</div>\n                                            </div>\n                                            <div className=\"user-item\">\n                                                <div className=\"user-label\">邮箱：</div>\n                                                <div className=\"user-email\">{email}</div>\n                                            </div>\n                                            <div className=\"user-bar\"></div>\n                                            <Button\n                                                size=\"small\"\n                                                className=\"user-btn\"\n                                                onClick={() => handleOperation(username, email, id)}\n                                            >操作</Button>\n                                        </div>\n                                })\n                            }\n                        </div>\n                        <div\n                            className=\"add-user\"\n                            onClick={handleAddUser}\n                        >添加用户</div>\n                    </>;\n                    case \"add\": return <Form\n                        labelCol={{ span: 6 }}\n                        wrapperCol={{ span: 17 }}\n                        onFinish={handleConfirm}\n                        autoComplete=\"off\"\n                    >\n                        <Form.Item\n                            label=\"用户名\"\n                            name=\"username\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input username!'\n                                    }\n                                ]\n                            }\n                        >\n                            <Input className=\"input-resive\" />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"密码\"\n                            name=\"password\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input password!'\n                                    }\n                                ]\n                            }\n                        >\n                            <InputPassword className=\"input-resive\" />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"确认密码\"\n                            name=\"rePassword\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input password!'\n                                    }\n                                ]\n                            }\n                        >\n                            <InputPassword className=\"input-resive\" />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"邮箱\"\n                            name=\"email\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input email!'\n                                    }\n                                ]\n                            }\n                        >\n                            <Input className=\"input-resive\" />\n                        </Form.Item>\n                        <Form.Item wrapperCol={{ offset: 6, span: 17 }}>\n                            <Button\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                            >\n                                确认添加\n                            </Button>\n                        </Form.Item>\n                    </Form>;\n                    case \"resive\": return <Form\n                        labelCol={{ span: 6 }}\n                        wrapperCol={{ span: 17 }}\n                        ref={formRef}\n                        onFinish={handleConfirm}\n                        autoComplete=\"off\"\n                        initialValues={{\n                            \"username\": name,\n                            \"password\": \"\",\n                            \"rePassword\": \"\",\n                            \"email\": email\n                        }}\n                    >\n                        <Form.Item\n                            label=\"用户名\"\n                            name=\"username\"\n                            rules={\n                                [\n                                    {\n                                        required: false,\n                                        message: 'Please input your username!'\n                                    }\n                                ]\n                            }\n                        >\n                            <Input className=\"input-resive\" />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"密码\"\n                            name=\"password\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input your password!'\n                                    }\n                                ]\n                            }\n                        >\n                            <Input className=\"input-resive\" />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"邮箱\"\n                            name=\"email\"\n                            rules={\n                                [\n                                    {\n                                        required: false,\n                                        message: 'Please input your email!'\n                                    }\n                                ]\n                            }\n                        >\n                            <Input className=\"input-resive\" />\n                        </Form.Item>\n                        <Form.Item wrapperCol={{ offset: 6, span: 17 }}>\n                            <Button\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                            >\n                                确认修改\n                            </Button>\n                        </Form.Item>\n                        <Button\n                            className=\"delete\"\n                            type=\"primary\"\n                            onClick={handleDeleteUser}\n                            danger\n                        >\n                            删除该用户\n                        </Button>\n                    </Form>;\n                }\n            })()\n            }\n        </div>\n    )\n}\n\nexport default observer(User);\n",["98","99"],"/Users/wuliangrui/Desktop/库里泡/item/student/src/components/Person/Book/index.js",["100","101"],[],"import { useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport {\n    Form, Button,\n    Input, Empty\n} from \"antd\";\nimport myStore from \"../../../store\";\nimport tools from \"../../../utils/tools\";\nimport \"./index.css\";\n\nconst { category, category_id } = tools;\n\nfunction Book() {\n    const [display, setDisplay] = useState(\"find\");\n    const [id, setId] = useState(\"\");\n    const [inputValue, setInputValue] = useState(\"\");\n    const [book, setBook] = useState({});\n\n    const handlePressEnter = (event) => {\n        const { target: { value } } = event;\n        setDisplay(\"resive\");\n        myStore.booksSearchRequest({\n            q: value,\n            page: 1\n        });\n        setInputValue(value);\n        myStore.modifySwitchStatus(false);\n    }\n\n    const handleConfirm = async(value) => {\n        const {\n            category, brief,\n            author, number,\n            bookname,\n        } = value;\n\n        await myStore.modifyBookRequest({\n            category_id: category_id(category),\n            title: bookname,\n            author,\n            intro: brief,\n            number\n        }, id);\n        myStore.modifySwitchStatus(true);\n\n        setDisplay(\"resive\");\n        myStore.booksSearchRequest({\n            q: inputValue,\n            page: 1\n        });\n    }\n\n    const handleDelete = async(id) => {\n        await myStore.deleteBookRequest(id);\n        myStore.modifySwitchStatus(true);\n        \n        setDisplay(\"resive\");\n        myStore.booksSearchRequest({\n            q: inputValue,\n            page: 1\n        });\n    }\n\n    const handleStart = async(item, id) => {\n        setId(id);\n        await setBook(item);\n\n        setDisplay(\"resiveCom\");\n    }\n\n    return (\n        <div className=\"content\">\n            {(() => {\n                switch (display) {\n                    case \"find\": return <>\n                        <div className=\"find\">书籍名查找</div>\n                        <Input\n                            onPressEnter={handlePressEnter}\n                            placeholder=\"请输入书籍名\"\n                            className=\"input-bookname\"\n                        />\n                    </>;\n                    case \"resive\": return <div className=\"page-preson\">\n                        {\n                            myStore.booksSuperData.length === 0\n                                ? <Empty\n                                    className=\"empty\"\n                                    description=\"没有数据\"\n                                    image={Empty.PRESENTED_IMAGE_SIMPLE}\n                                />\n                                : myStore.booksSuperData.map((item) => {\n                                    return <div className=\"page-item\" key={item.id}>\n                                        <div className=\"item-left\">\n                                            <img className=\"item-image\" src={item.cover} />\n                                        </div>\n                                        <div className=\"item-right\">\n                                            <div className=\"item-title\">\n                                                <div className=\"title-word\">{item.title}</div>\n                                                <div className=\"title-btn\">\n                                                    <Button\n                                                        size=\"small\"\n                                                        className=\"btn-left\"\n                                                        onClick={() => handleDelete(item.id)}\n                                                    >删除</Button>\n                                                    <Button\n                                                        size=\"small\"\n                                                        onClick={() => handleStart(item, item.id)}\n                                                    >修改</Button>\n                                                </div>\n                                            </div>\n                                            <div className=\"item-author\">{item.author}</div>\n                                            <div className=\"item-number\">数目: {item.number}</div>\n                                            <div className=\"item-brief\">{item.intro}</div>\n                                            <div className=\"item-category\">\n                                                {\n                                                    category(item.category)\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                            })\n                        }\n                    </div>;\n                    case \"resiveCom\": return <Form\n                        labelCol={{ span: 6 }}\n                        wrapperCol={{ span: 17 }}\n                        onFinish={handleConfirm}\n                        autoComplete=\"off\"\n                        initialValues={{\n                            bookname: book.title,\n                            author: book.author,\n                            number: book.number,\n                            brief: book.intro,\n                            category: category(book.category)\n                        }}\n                    >\n                        <Form.Item\n                            label=\"书籍名\"\n                            name=\"bookname\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input bookname!'\n                                    }\n                                ]\n                            }\n                        >\n                            <Input className=\"input-resive\" />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"作者\"\n                            name=\"author\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input author!'\n                                    }\n                                ]\n                            }\n                        >\n                            <Input className=\"input-resive\" />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"剩余数量\"\n                            name=\"number\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input number!'\n                                    }\n                                ]\n                            }\n                        >\n                            <Input className=\"input-resive\" />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"分类\"\n                            name=\"category\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input category!'\n                                    }\n                                ]\n                            }\n                        >\n                            <Input className=\"input-resive\" />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"简介\"\n                            name=\"brief\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input brief!'\n                                    }\n                                ]\n                            }\n                        >\n                            <Input className=\"input-resive\" />\n                        </Form.Item>\n                        <Form.Item wrapperCol={{ offset: 6, span: 17 }}>\n                            <Button\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                            >\n                                确认修改\n                            </Button>\n                        </Form.Item>\n                    </Form>;\n                }\n            })()}\n        </div>\n    )\n}\n\nexport default observer(Book);\n","/Users/wuliangrui/Desktop/库里泡/item/student/src/store/index.js",["102","103","104","105"],[],"import {\n    makeAutoObservable\n} from \"mobx\";\nimport { message } from \"antd\";\nimport {\n    booksSearch,\n    booksKind,\n    booksKindSearch,\n    login, register,\n    borrowBook,\n    returnBooksList,\n    returnBooksListSuper,\n    returnBook,\n    getUsers,\n    modifyUser,\n    addUser,\n    deleteUser,\n    modifyBook,\n    deleteBook\n} from \"../services/index.js\";\n\nclass Mobx {\n    bookName = \"\"\n    booksPageNum = 2\n    booksPageCount = 0\n    booksData = []\n    booksSuperData = []\n    booksKindData = []\n    isSearch = true\n    returnBooksListData = []\n    usersListData = []\n    canSwitch = true\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    modifySwitchStatus = (bool) => {\n        this.canSwitch = bool;\n    }\n\n    modifyBookNumber = (modifyId) => {\n        this.booksData = this.booksData.map(item => {\n            const { id, number } = item;\n            if (modifyId === id) {\n                return {\n                    ...item,\n                    number: number - 1\n                }\n            } else {\n                return item;\n            }\n        })\n    }\n\n    login = async(data) => {\n        const event = await login(data);\n        const {\n            data: { \n                code, token,\n                message: reMessage,\n                superuser, email\n            }\n        } = event;\n\n        if (!code) {\n            localStorage.setItem(\"token\", token);\n            localStorage.setItem(\"superuser\", superuser);\n            localStorage.setItem(\"username\", data.username);\n            localStorage.setItem(\"email\", email);\n            message.success(\"登录成功\");\n            return true;\n        } else {\n            message.error(reMessage);\n            return false;\n        }\n    }\n\n    register = async(data) => {\n        const event = await register(data);\n        const {\n            data: { \n                code, token,\n                message: reMessage,\n                email, superuser\n            }\n        } = event;\n\n        if (!code) {\n            localStorage.setItem(\"token\", token);\n            localStorage.setItem(\"superuser\", superuser);\n            localStorage.setItem(\"username\", data.username);\n            localStorage.setItem(\"email\", email);\n            message.success(\"注册成功自动登录\");\n            return true;\n        } else {\n            message.error(reMessage);\n            return false;\n        }\n    }\n\n    booksSearch = async(data) => {\n        const event = await booksSearch(data);\n        const {\n            data: {\n                books, num_pages\n            }\n        } = event;\n\n        this.isSearch = true;\n        this.booksData = books;\n        this.booksPageNum = 2;\n        this.booksPageCount = num_pages + 1;\n        this.bookName = data.q;\n    }\n\n    booksSearchRequest = async(data) => {\n        const event = await booksSearch(data);\n        const {\n            data: {\n                books\n            }\n        } = event;\n\n        this.booksSuperData = books;\n    }\n\n    booksSearchAdd = async() => {\n        if (this.booksPageNum < this.booksPageCount) {\n            if (this.isSearch) {\n                const event = await booksSearch({\n                    q: this.bookName,\n                    page: this.booksPageNum\n                });\n    \n                const {\n                    data: {\n                        books\n                    }\n                } = event;\n\n                this.booksPageNum = this.booksPageNum + 1;\n                this.booksData = [...this.booksData, ...books];\n            } else {\n                const event = await booksKindSearch({\n                    category: this.category,\n                    page: this.booksPageNum\n                });\n    \n                const {\n                    data: {\n                        lists\n                    }\n                } = event;\n\n                this.booksPageNum = this.booksPageNum + 1;\n                this.booksData = [...this.booksData, ...lists];\n            }\n        } else {\n            message.warning(\"无更多书籍\");\n        }\n    }\n\n    booksKindRequest = async() => {\n        const event = await booksKind()\n\n        this.booksKindData = event.data;\n    }\n\n    booksKindSearchRequest = async(data) => {\n        const event = await booksKindSearch(data);\n        const {\n            data: {\n                lists, pages\n            }\n        } = event;\n\n        this.isSearch = false;\n        this.kindId = data.category;\n        this.booksData = lists;\n        this.booksPageCount = pages + 1;\n    }\n\n    borrowBookRequest = async(data) => {\n        const {\n            data: {\n                code,\n                message: reMessage\n            }\n        } =  await borrowBook(data);\n\n        if (!code) {\n            message.success(reMessage);\n        } else {\n            message.error(reMessage);\n        }\n    }\n\n    returnBooksListRequest = async() => {\n        const superuser = JSON.parse(localStorage.getItem(\"superuser\"));\n\n        if (superuser) {\n            const { data } = await returnBooksListSuper();\n\n            this.returnBooksListData = data.filter(item => !item.status);\n        } else {\n            const { data } = await returnBooksList();\n\n            this.returnBooksListData = data.filter(item => !item.status);\n        }\n    }\n\n    returnBookRequest = async(data) => {\n        const {\n            data: {\n                code,\n                message: reMessage\n            }\n        } = await returnBook(data);\n\n        if (!code) {\n            message.success(reMessage);\n        } else {\n            message.error(reMessage);\n        }\n    }\n\n    getUsersRequest = async() => {\n        const {\n            data\n        } = await getUsers();\n        \n        this.usersListData = data;\n    }\n\n    modifyUserRequest = async(data, id) => {\n        const {\n            data: {\n                code, msg\n            }\n        } = await modifyUser(data, id);\n\n        if (code) {\n            message.success(msg);\n        } else {\n            message.error(msg);\n        }\n    }\n\n    addUserRequest = async(data) => {\n        const {\n            data: {\n                code, msg\n            }\n        } = await addUser(data);\n        \n        if (code) {\n            message.success(msg);\n        } else {\n            message.error(msg);\n        }\n    }\n\n    deleteUserRequest = async(id) => {\n        const { status } = await deleteUser(id);\n        \n        if (status === 304 || status === 400 || status >= 200 && status < 300) {\n            message.success(\"删除成功\");\n        } else {\n            message.error(\"删除失败\");\n        }\n    }\n\n    modifyBookRequest = async(data, id) => {\n        const {\n            data: {\n                code, msg\n            }\n        } = await modifyBook(data, id);\n        \n        if (code) {\n            message.success(msg);\n        } else {\n            message.error(msg);\n        }\n    }\n\n    deleteBookRequest = async(id) => {\n        const { status } = await deleteBook(id);\n        \n        if (status === 304 || status === 400 || status >= 200 && status < 300) {\n            message.success(\"删除成功\");\n        } else {\n            message.error(\"删除失败\");\n        }\n    }\n}\n\nconst myStore = new Mobx();\nexport default myStore;\n\n","/Users/wuliangrui/Desktop/库里泡/item/student/src/services/index.js",[],[],["106","107"],"/Users/wuliangrui/Desktop/库里泡/item/student/src/utils/request.js",["108","109","110"],[],"import axios from 'axios'\n\naxios.interceptors.request.use(config => {\n    if (config.url === \"/login/\") {\n       localStorage.clear();\n    } else {\n        const token = `JWT ${localStorage.getItem(\"token\")}`;\n        config.headers.Authorization = token;\n    }\n    return config\n}, error => {\n    return Promise.reject(error)\n})\n\naxios.interceptors.response.use(response => {\n    return response\n}, error => {\n    return Promise.resolve(error.response)\n})\n\nfunction checkStatus(response) {\n    // loading\n    // 如果http状态码正常，则直接返回数据\n    if (response && (response.status === 304 || response.status === 400 || response.status >= 200 && response.status < 300)) {\n        return response\n        // 如果不需要除了data之外的数据，可以直接 return response.data\n    }\n    // 异常状态下，把错误信息返回去\n    return {\n        status: -404,\n        msg: '网络异常'\n    }\n}\n\nfunction checkCode(res) {\n    // 如果code异常(这里已经包括网络错误，服务器错误，后端抛出的错误)，可以弹出一个错误提示，告诉用户\n    if (res.status === -404) {\n        // alert(res.msg)\n    }\n    if (res.data && (!res.data.success)) {\n        // alert(res.data.error_msg)\n    }\n    return res\n}\n\nexport default {\n    post(url, data) {\n        return axios({\n            method: 'post',\n            baseURL: \"http://82.156.102.187:8001\",\n            url,\n            data: JSON.stringify(data),\n            timeout: 10000,\n            headers: {\n                'X-Requested-With': 'XMLHttpRequest',\n                'Content-Type': 'application/json'\n            }\n        }).then(\n            (response) => {\n                return checkStatus(response)\n            }\n        ).then(\n            (res) => {\n                return checkCode(res)\n            }\n        )\n    },\n    get(url, params) {\n        return axios({\n            method: 'get',\n            baseURL: 'http://82.156.102.187:8001',\n            url,\n            params, // get 请求时带的参数\n            timeout: 10000,\n            headers: {\n                'X-Requested-With': 'XMLHttpRequest'\n            }\n        }).then(\n            (response) => {\n                return checkStatus(response)\n            }\n        ).then(\n            (res) => {\n                return checkCode(res)\n            }\n        )\n    },\n    patch(url, data) {\n        return axios({\n            method: 'patch',\n            baseURL: 'http://82.156.102.187:8001',\n            url,\n            data,\n            timeout: 10000\n        }).then(\n            (response) => {\n                return checkStatus(response)\n            }\n        ).then(\n            (res) => {\n                return checkCode(res)\n            }\n        )\n    },\n    delete(url, data) {\n        return axios({\n            method: 'delete',\n            baseURL: 'http://82.156.102.187:8001',\n            url,\n            data,\n            timeout: 1000\n        }).then(\n            (response) => {\n                return checkStatus(response)\n            }\n        ).then(\n            (res) => {\n                return checkCode(res);\n            }\n        )\n    }\n}",["111","112"],"/Users/wuliangrui/Desktop/库里泡/item/student/src/components/ReturnBook/index.js",["113"],[],"import { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport { Button, Empty } from \"antd\";\nimport myStore from \"../../store\";\nimport \"./index.css\";\n\nfunction ReturnBook() {\n    const navigate = useNavigate();\n    const superuser = JSON.parse(localStorage.getItem(\"superuser\"));\n\n    const handleReturn = () => {\n        navigate(\"/home\");\n    }\n\n    useEffect(() => {\n        myStore.returnBooksListRequest();\n    }, [])\n\n    const handleReturnBook = async (id) => {\n        await myStore.returnBookRequest({\n            history: id\n        });\n        myStore.returnBooksListRequest();\n    }\n\n    return (\n        <div className=\"all\">\n            <div\n                className=\"router-home\"\n                onClick={handleReturn}\n            >首页</div>\n            <div className=\"all-innner\">\n                <div className=\"header\">归还书籍</div>\n                <div className=\"return-bar\"></div>\n                <div className=\"return-content\">\n                    {\n                        myStore.returnBooksListData.length === 0\n                            ? <Empty\n                                className=\"empty\"\n                                description=\"没有数据\"\n                                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                            />\n                            : myStore.returnBooksListData.map((item) => {\n                                const { book, id, user } = item;\n                                return <div className=\"return-item\" key={id}>\n                                    <div className=\"page-left\">\n                                        <img className=\"page-image\" src={book.cover} />\n                                    </div>\n                                    <div className=\"page-right\">\n                                        <div className=\"page-title\">{book.title}</div>\n                                        <div className=\"page-author\">{book.author}</div>\n                                        <div className=\"page-number\">借书人: {user}</div>\n                                        <div className=\"page-brief\">{book.intro}</div>\n                                        <div className=\"page-category\">分类：{book.category}</div>\n                                        <Button\n                                            size=\"small\"\n                                            className=\"page-btn\"\n                                            onClick={() => handleReturnBook(id)}\n                                        >{superuser ? \"帮他归还\" : \"归还\"}</Button>\n                                    </div>\n                                </div>\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default observer(ReturnBook);","/Users/wuliangrui/Desktop/库里泡/item/student/src/utils/tools.js",["114","115","116"],[],"export default {\n    category(category_id) {\n        switch (category_id) {\n            case 1: return \"精品小说\";\n            case 2: return \"历史\"\n            case 3: return \"文学\"\n            case 4: return \"艺术\"\n            case 5: return \"人物传记\"\n            case 6: return \"哲学宗教\"\n            case 7: return \"计算机\"\n            case 8: return \"心理\"\n            case 9: return \"社会文化\"\n            case 10: return \"个人成长\"\n            case 11: return \"经济理财\"\n            case 12: return \"政治军事\"\n            case 13: return \"童书\"\n            case 14: return \"教育学习\"\n            case 15: return \"科学科技\"\n            case 16: return \"生活百科\"\n        }\n    },\n\n    category_id(category) {\n        switch (category) {\n            case \"精品小说\": return 1\n            case \"历史\": return 2\n            case \"文学\": return 3\n            case \"艺术\": return 4\n            case \"人物传记\": return 5\n            case \"哲学宗教\": return 6\n            case \"计算机\": return 7\n            case \"心理\": return 8\n            case \"社会文化\": return 9\n            case \"个人成长\": return 10\n            case \"经济理财\": return 11\n            case \"政治军事\": return 12\n            case \"童书\": return 13\n            case \"教育学习\": return 14\n            case \"科学科技\": return 15\n            case \"生活百科\": return 16\n        }\n    }\n}",{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":181,"column":21,"nodeType":"123","endLine":184,"endColumn":22},{"ruleId":"117","replacedBy":"124"},{"ruleId":"119","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":12,"column":9,"nodeType":"128","messageId":"129","endLine":17,"endColumn":10},{"ruleId":"130","severity":1,"message":"131","line":64,"column":33,"nodeType":"123","endLine":64,"endColumn":80},{"ruleId":"126","severity":1,"message":"127","line":76,"column":17,"nodeType":"128","messageId":"129","endLine":255,"endColumn":18},{"ruleId":"117","replacedBy":"132"},{"ruleId":"119","replacedBy":"133"},{"ruleId":"126","severity":1,"message":"127","line":74,"column":17,"nodeType":"128","messageId":"129","endLine":216,"endColumn":18},{"ruleId":"130","severity":1,"message":"131","line":94,"column":45,"nodeType":"123","endLine":94,"endColumn":92},{"ruleId":"134","severity":1,"message":"135","line":267,"column":46,"nodeType":"136","messageId":"137","endLine":267,"endColumn":48},{"ruleId":"134","severity":1,"message":"135","line":267,"column":63,"nodeType":"136","messageId":"137","endLine":267,"endColumn":65},{"ruleId":"134","severity":1,"message":"135","line":291,"column":46,"nodeType":"136","messageId":"137","endLine":291,"endColumn":48},{"ruleId":"134","severity":1,"message":"135","line":291,"column":63,"nodeType":"136","messageId":"137","endLine":291,"endColumn":65},{"ruleId":"117","replacedBy":"138"},{"ruleId":"119","replacedBy":"139"},{"ruleId":"134","severity":1,"message":"135","line":24,"column":73,"nodeType":"136","messageId":"137","endLine":24,"endColumn":75},{"ruleId":"134","severity":1,"message":"135","line":24,"column":99,"nodeType":"136","messageId":"137","endLine":24,"endColumn":101},{"ruleId":"140","severity":1,"message":"141","line":46,"column":1,"nodeType":"142","endLine":122,"endColumn":2},{"ruleId":"117","replacedBy":"143"},{"ruleId":"119","replacedBy":"144"},{"ruleId":"130","severity":1,"message":"131","line":48,"column":41,"nodeType":"123","endLine":48,"endColumn":88},{"ruleId":"140","severity":1,"message":"141","line":1,"column":1,"nodeType":"142","endLine":43,"endColumn":2},{"ruleId":"126","severity":1,"message":"127","line":3,"column":9,"nodeType":"128","messageId":"129","endLine":20,"endColumn":10},{"ruleId":"126","severity":1,"message":"127","line":24,"column":9,"nodeType":"128","messageId":"129","endLine":41,"endColumn":10},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",["145"],["146"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["145"],["146"],"no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator",["145"],["146"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["145"],["146"],"no-global-assign","no-unsafe-negation"]