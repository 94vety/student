{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport { message } from \"antd\";\nimport { booksSearch, booksKind, booksKindSearch, login, register } from \"../services/index.js\";\n\nclass Mobx {\n  constructor() {\n    this.bookName = \"\";\n    this.booksPageNum = 2;\n    this.booksPageCount = 0;\n    this.booksData = [];\n    this.booksKindData = [];\n\n    this.login = async data => {\n      const event = await login(data);\n      const {\n        data: {\n          code,\n          token,\n          message: reMessage\n        }\n      } = event;\n\n      if (!code) {\n        localStorage.setItem(\"token\", token);\n        message.success(\"登录成功\");\n        return true;\n      } else {\n        message.error(reMessage);\n        return false;\n      }\n    };\n\n    this.register = async data => {\n      const event = await register(data);\n      const {\n        data: {\n          code,\n          token,\n          message: reMessage\n        }\n      } = event;\n\n      if (!code) {\n        localStorage.setItem(\"token\", token);\n        message.success(\"注册成功自动登录\");\n        return true;\n      } else {\n        message.error(reMessage);\n        return false;\n      }\n    };\n\n    this.booksSearch = async data => {\n      const event = await booksSearch(data);\n      const {\n        data: {\n          books,\n          num_pages\n        }\n      } = event;\n      this.booksData = books;\n      this.booksPageNum = 2;\n      this.booksPageCount = num_pages + 1;\n      this.bookName = data.q;\n    };\n\n    this.booksSearchAdd = async () => {\n      if (this.booksPageNum < this.booksPageCount) {\n        const event = await booksSearch({\n          q: this.bookName,\n          page: this.booksPageNum\n        });\n        const {\n          data: {\n            books\n          }\n        } = event;\n        this.booksPageNum = this.booksPageNum + 1;\n        this.booksData = [...this.booksData, ...books];\n      } else {\n        message.warning(\"无更多书籍\");\n      }\n    };\n\n    this.booksKindRequest = async () => {\n      const event = await booksKind();\n      this.booksKindData = event.data;\n    };\n\n    this.booksKindSearchRequest = async data => {\n      const event = await booksKindSearch(data);\n      const {\n        data: {\n          list,\n          num_pages\n        }\n      } = event;\n      console.log(list, event);\n      this.booksData = list;\n      this.booksPageCount = num_pages + 1;\n      console.log(event);\n    };\n\n    makeAutoObservable(this, {});\n  }\n\n}\n\nconst myStore = new Mobx();\nexport default myStore;","map":{"version":3,"sources":["/Users/wuliangrui/Desktop/库里泡/item/student/src/store/index.js"],"names":["makeAutoObservable","message","booksSearch","booksKind","booksKindSearch","login","register","Mobx","constructor","bookName","booksPageNum","booksPageCount","booksData","booksKindData","data","event","code","token","reMessage","localStorage","setItem","success","error","books","num_pages","q","booksSearchAdd","page","warning","booksKindRequest","booksKindSearchRequest","list","console","log","myStore"],"mappings":"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","sourcesContent":["import {\n    makeAutoObservable\n} from \"mobx\";\nimport { message } from \"antd\";\nimport {\n    booksSearch,\n    booksKind,\n    booksKindSearch,\n    login, register\n} from \"../services/index.js\";\n\nclass Mobx {\n    bookName = \"\"\n    booksPageNum = 2\n    booksPageCount = 0\n    booksData = []\n    booksKindData = []\n\n    constructor() {\n        makeAutoObservable(this, {\n\n        });\n    }\n\n    login = async(data) => {\n        const event = await login(data);\n        const {\n            data: { \n                code, token,\n                message: reMessage\n            }\n        } = event;\n\n        if (!code) {\n            localStorage.setItem(\"token\", token);\n            message.success(\"登录成功\");\n            return true;\n        } else {\n            message.error(reMessage);\n            return false;\n        }\n    }\n\n    register = async(data) => {\n        const event = await register(data);\n        const {\n            data: { \n                code, token,\n                message: reMessage\n            }\n        } = event;\n\n        if (!code) {\n            localStorage.setItem(\"token\", token);\n            message.success(\"注册成功自动登录\");\n            return true;\n        } else {\n            message.error(reMessage);\n            return false;\n        }\n    }\n\n    booksSearch = async(data) => {\n        const event = await booksSearch(data);\n        const {\n            data: {\n                books, num_pages\n            }\n        } = event;\n\n        this.booksData = books;\n        this.booksPageNum = 2;\n        this.booksPageCount = num_pages + 1;\n        this.bookName = data.q;\n    }\n\n    booksSearchAdd = async() => {\n        if (this.booksPageNum < this.booksPageCount) {\n            const event = await booksSearch({\n                q: this.bookName,\n                page: this.booksPageNum\n            });\n\n            const {\n                data: {\n                    books\n                }\n            } = event;\n\n            this.booksPageNum = this.booksPageNum + 1;\n            this.booksData = [...this.booksData, ...books];\n        } else {\n            message.warning(\"无更多书籍\");\n        }\n    }\n\n    booksKindRequest = async() => {\n        const event = await booksKind()\n\n        this.booksKindData = event.data;\n    }\n\n    booksKindSearchRequest = async(data) => {\n        const event = await booksKindSearch(data);\n        const {\n            data: {\n                list, num_pages\n            }\n        } = event;\n        console.log(list, event);\n        this.booksData = list;\n        this.booksPageCount = num_pages + 1;\n        console.log(event);\n    }\n}\n\nconst myStore = new Mobx();\nexport default myStore;\n\n"]},"metadata":{},"sourceType":"module"}