{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport { message } from \"antd\";\nimport { booksSearch, booksKind, login, register } from \"../services/index.js\";\n\nclass Mobx {\n  constructor() {\n    this.booksPageNum = 0;\n    this.booksData = [];\n    this.booksKindData = [];\n\n    this.login = async data => {\n      const event = await login(data);\n      const {\n        data: {\n          code,\n          token,\n          message: reMessage\n        }\n      } = event;\n\n      if (!code) {\n        console.log(token);\n        message.success(\"登录成功\");\n        return true;\n      } else {\n        message.error(reMessage);\n        return false;\n      }\n    };\n\n    this.register = async data => {\n      const event = await register(data);\n      const {\n        data: {\n          code,\n          token,\n          message: reMessage\n        }\n      } = event;\n\n      if (!code) {\n        console.log(token);\n        message.success(\"注册成功自动登录\");\n        return true;\n      } else {\n        message.error(reMessage);\n        return false;\n      }\n    };\n\n    this.booksSearch = async data => {\n      const event = await booksSearch(data);\n      const {\n        data: {\n          books,\n          num_pages\n        }\n      } = event;\n      this.booksData = books;\n      this.booksPageNum = num_pages + 1;\n    };\n\n    this.booksSearchAdd = async data => {\n      if (data.page < this.booksPageNum) {\n        const event = await booksSearch(data);\n        const {\n          data: {\n            books\n          }\n        } = event;\n        this.booksData = [...this.booksData, ...books];\n      } else {\n        message.warning(\"无更多书籍\");\n      }\n    };\n\n    this.booksKindRequest = async () => {\n      const event = await booksKind();\n      this.booksKindData = event.data;\n    };\n\n    makeAutoObservable(this, {});\n  }\n\n}\n\nconst myStore = new Mobx();\nexport default myStore;","map":{"version":3,"sources":["/Users/wuliangrui/Desktop/库里泡/item/student/src/store/index.js"],"names":["makeAutoObservable","message","booksSearch","booksKind","login","register","Mobx","constructor","booksPageNum","booksData","booksKindData","data","event","code","token","reMessage","console","log","success","error","books","num_pages","booksSearchAdd","page","warning","booksKindRequest","myStore"],"mappings":"AAAA,SACIA,kBADJ,QAEO,MAFP;AAGA,SAASC,OAAT,QAAwB,MAAxB;AACA,SACIC,WADJ,EAEIC,SAFJ,EAGIC,KAHJ,EAGWC,QAHX,QAIO,sBAJP;;AAMA,MAAMC,IAAN,CAAW;AAKPC,EAAAA,WAAW,GAAG;AAAA,SAJdC,YAIc,GAJC,CAID;AAAA,SAHdC,SAGc,GAHF,EAGE;AAAA,SAFdC,aAEc,GAFE,EAEF;;AAAA,SAMdN,KANc,GAMN,MAAMO,IAAN,IAAe;AACnB,YAAMC,KAAK,GAAG,MAAMR,KAAK,CAACO,IAAD,CAAzB;AACA,YAAM;AACFA,QAAAA,IAAI,EAAE;AACFE,UAAAA,IADE;AACIC,UAAAA,KADJ;AAEFb,UAAAA,OAAO,EAAEc;AAFP;AADJ,UAKFH,KALJ;;AAOA,UAAI,CAACC,IAAL,EAAW;AACPG,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAb,QAAAA,OAAO,CAACiB,OAAR,CAAgB,MAAhB;AACA,eAAO,IAAP;AACH,OAJD,MAIO;AACHjB,QAAAA,OAAO,CAACkB,KAAR,CAAcJ,SAAd;AACA,eAAO,KAAP;AACH;AACJ,KAvBa;;AAAA,SAyBdV,QAzBc,GAyBH,MAAMM,IAAN,IAAe;AACtB,YAAMC,KAAK,GAAG,MAAMP,QAAQ,CAACM,IAAD,CAA5B;AACA,YAAM;AACFA,QAAAA,IAAI,EAAE;AACFE,UAAAA,IADE;AACIC,UAAAA,KADJ;AAEFb,UAAAA,OAAO,EAAEc;AAFP;AADJ,UAKFH,KALJ;;AAOA,UAAI,CAACC,IAAL,EAAW;AACPG,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAb,QAAAA,OAAO,CAACiB,OAAR,CAAgB,UAAhB;AACA,eAAO,IAAP;AACH,OAJD,MAIO;AACHjB,QAAAA,OAAO,CAACkB,KAAR,CAAcJ,SAAd;AACA,eAAO,KAAP;AACH;AACJ,KA1Ca;;AAAA,SA4Cdb,WA5Cc,GA4CA,MAAMS,IAAN,IAAe;AACzB,YAAMC,KAAK,GAAG,MAAMV,WAAW,CAACS,IAAD,CAA/B;AACA,YAAM;AACFA,QAAAA,IAAI,EAAE;AACFS,UAAAA,KADE;AACKC,UAAAA;AADL;AADJ,UAIFT,KAJJ;AAMA,WAAKH,SAAL,GAAiBW,KAAjB;AACA,WAAKZ,YAAL,GAAoBa,SAAS,GAAG,CAAhC;AACH,KAtDa;;AAAA,SAwDdC,cAxDc,GAwDG,MAAMX,IAAN,IAAe;AAC5B,UAAIA,IAAI,CAACY,IAAL,GAAY,KAAKf,YAArB,EAAmC;AAC/B,cAAMI,KAAK,GAAG,MAAMV,WAAW,CAACS,IAAD,CAA/B;AACA,cAAM;AACFA,UAAAA,IAAI,EAAE;AACFS,YAAAA;AADE;AADJ,YAIFR,KAJJ;AAMA,aAAKH,SAAL,GAAiB,CAAC,GAAG,KAAKA,SAAT,EAAoB,GAAGW,KAAvB,CAAjB;AACH,OATD,MASO;AACHnB,QAAAA,OAAO,CAACuB,OAAR,CAAgB,OAAhB;AACH;AACJ,KArEa;;AAAA,SAuEdC,gBAvEc,GAuEK,YAAW;AAC1B,YAAMb,KAAK,GAAG,MAAMT,SAAS,EAA7B;AAEA,WAAKO,aAAL,GAAqBE,KAAK,CAACD,IAA3B;AACH,KA3Ea;;AACVX,IAAAA,kBAAkB,CAAC,IAAD,EAAO,EAAP,CAAlB;AAGH;;AATM;;AAmFX,MAAM0B,OAAO,GAAG,IAAIpB,IAAJ,EAAhB;AACA,eAAeoB,OAAf","sourcesContent":["import {\n    makeAutoObservable\n} from \"mobx\";\nimport { message } from \"antd\";\nimport {\n    booksSearch,\n    booksKind,\n    login, register\n} from \"../services/index.js\";\n\nclass Mobx {\n    booksPageNum = 0\n    booksData = []\n    booksKindData = []\n\n    constructor() {\n        makeAutoObservable(this, {\n\n        });\n    }\n\n    login = async(data) => {\n        const event = await login(data);\n        const {\n            data: { \n                code, token,\n                message: reMessage\n            }\n        } = event;\n\n        if (!code) {\n            console.log(token);\n            message.success(\"登录成功\");\n            return true;\n        } else {\n            message.error(reMessage);\n            return false;\n        }\n    }\n\n    register = async(data) => {\n        const event = await register(data);\n        const {\n            data: { \n                code, token,\n                message: reMessage\n            }\n        } = event;\n\n        if (!code) {\n            console.log(token);\n            message.success(\"注册成功自动登录\");\n            return true;\n        } else {\n            message.error(reMessage);\n            return false;\n        }\n    }\n\n    booksSearch = async(data) => {\n        const event = await booksSearch(data);\n        const {\n            data: {\n                books, num_pages\n            }\n        } = event;\n\n        this.booksData = books;\n        this.booksPageNum = num_pages + 1;\n    }\n\n    booksSearchAdd = async(data) => {\n        if (data.page < this.booksPageNum) {\n            const event = await booksSearch(data);\n            const {\n                data: {\n                    books\n                }\n            } = event;\n\n            this.booksData = [...this.booksData, ...books];\n        } else {\n            message.warning(\"无更多书籍\");\n        }\n    }\n\n    booksKindRequest = async() => {\n        const event = await booksKind()\n\n        this.booksKindData = event.data;\n    }\n}\n\nconst myStore = new Mobx();\nexport default myStore;\n\n"]},"metadata":{},"sourceType":"module"}