{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport { message } from \"antd\";\nimport { booksSearch, booksKind, booksKindSearch, login, register, borrowBook, returnBooksList, returnBooksListSuper, returnBook, getUsers, modifyUser, addUser, deleteUser, modifyBook, deleteBook } from \"../services/index.js\";\n\nclass Mobx {\n  constructor() {\n    this.bookName = \"\";\n    this.booksPageNum = 2;\n    this.booksPageCount = 0;\n    this.booksData = [];\n    this.booksSuperData = [];\n    this.booksKindData = [];\n    this.isSearch = true;\n    this.returnBooksListData = [];\n    this.usersListData = [];\n    this.canSwitch = true;\n\n    this.modifySwitchStatus = bool => {\n      this.canSwitch = bool;\n    };\n\n    this.modifyBookNumber = modifyId => {\n      this.booksData = this.booksData.map(item => {\n        const {\n          id,\n          number\n        } = item;\n\n        if (modifyId === id) {\n          return { ...item,\n            number: number - 1\n          };\n        } else {\n          return item;\n        }\n      });\n    };\n\n    this.login = async data => {\n      const event = await login(data);\n      const {\n        data: {\n          code,\n          token,\n          message: reMessage,\n          superuser,\n          email\n        }\n      } = event;\n\n      if (!code) {\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"superuser\", superuser);\n        localStorage.setItem(\"username\", data.username);\n        localStorage.setItem(\"email\", email);\n        message.success(\"登录成功\");\n        return true;\n      } else {\n        message.error(reMessage);\n        return false;\n      }\n    };\n\n    this.register = async data => {\n      const event = await register(data);\n      const {\n        data: {\n          code,\n          token,\n          message: reMessage\n        }\n      } = event;\n\n      if (!code) {\n        localStorage.setItem(\"token\", token);\n        message.success(\"注册成功自动登录\");\n        return true;\n      } else {\n        message.error(reMessage);\n        return false;\n      }\n    };\n\n    this.booksSearch = async data => {\n      const event = await booksSearch(data);\n      const {\n        data: {\n          books,\n          num_pages\n        }\n      } = event;\n      this.isSearch = true;\n      this.booksData = books;\n      this.booksPageNum = 2;\n      this.booksPageCount = num_pages + 1;\n      this.bookName = data.q;\n    };\n\n    this.booksSearchRequest = async data => {\n      const event = await booksSearch(data);\n      const {\n        data: {\n          books\n        }\n      } = event;\n      this.booksSuperData = books;\n    };\n\n    this.booksSearchAdd = async () => {\n      if (this.booksPageNum < this.booksPageCount) {\n        if (this.isSearch) {\n          const event = await booksSearch({\n            q: this.bookName,\n            page: this.booksPageNum\n          });\n          const {\n            data: {\n              books\n            }\n          } = event;\n          this.booksPageNum = this.booksPageNum + 1;\n          this.booksData = [...this.booksData, ...books];\n        } else {\n          const event = await booksKindSearch({\n            category: this.category,\n            page: this.booksPageNum\n          });\n          const {\n            data: {\n              lists\n            }\n          } = event;\n          this.booksPageNum = this.booksPageNum + 1;\n          this.booksData = [...this.booksData, ...lists];\n        }\n      } else {\n        message.warning(\"无更多书籍\");\n      }\n    };\n\n    this.booksKindRequest = async () => {\n      const event = await booksKind();\n      this.booksKindData = event.data;\n    };\n\n    this.booksKindSearchRequest = async data => {\n      const event = await booksKindSearch(data);\n      const {\n        data: {\n          lists,\n          pages\n        }\n      } = event;\n      this.isSearch = false;\n      this.kindId = data.category;\n      this.booksData = lists;\n      this.booksPageCount = pages + 1;\n    };\n\n    this.borrowBookRequest = async data => {\n      const {\n        data: {\n          code,\n          message: reMessage\n        }\n      } = await borrowBook(data);\n\n      if (!code) {\n        message.success(reMessage);\n      } else {\n        message.error(reMessage);\n      }\n    };\n\n    this.returnBooksListRequest = async () => {\n      const superuser = JSON.parse(localStorage.getItem(\"superuser\"));\n\n      if (superuser) {\n        const {\n          data\n        } = await returnBooksListSuper();\n        this.returnBooksListData = data.filter(item => !item.status);\n      } else {\n        const {\n          data\n        } = await returnBooksList();\n        this.returnBooksListData = data.filter(item => !item.status);\n      }\n    };\n\n    this.returnBookRequest = async data => {\n      const {\n        data: {\n          code,\n          message: reMessage\n        }\n      } = await returnBook(data);\n\n      if (!code) {\n        message.success(reMessage);\n      } else {\n        message.error(reMessage);\n      }\n    };\n\n    this.getUsersRequest = async () => {\n      const {\n        data\n      } = await getUsers();\n      this.usersListData = data;\n    };\n\n    this.modifyUserRequest = async (data, id) => {\n      const {\n        data: {\n          code,\n          msg\n        }\n      } = await modifyUser(data, id);\n\n      if (code) {\n        message.success(msg);\n      } else {\n        message.error(msg);\n      }\n    };\n\n    this.addUserRequest = async data => {\n      const {\n        data: {\n          code,\n          msg\n        }\n      } = await addUser(data);\n\n      if (code) {\n        message.success(msg);\n      } else {\n        message.error(msg);\n      }\n    };\n\n    this.deleteUserRequest = async id => {\n      const {\n        status\n      } = await deleteUser(id);\n\n      if (status === 304 || status === 400 || status >= 200 && status < 300) {\n        message.success(\"删除成功\");\n      } else {\n        message.error(\"删除失败\");\n      }\n    };\n\n    this.modifyBookRequest = async (data, id) => {\n      const {\n        data: {\n          code,\n          msg\n        }\n      } = await modifyBook(data, id);\n\n      if (code) {\n        message.success(msg);\n      } else {\n        message.error(msg);\n      }\n    };\n\n    this.deleteBookRequest = async id => {\n      const {\n        status\n      } = await deleteBook(id);\n\n      if (status === 304 || status === 400 || status >= 200 && status < 300) {\n        message.success(\"删除成功\");\n      } else {\n        message.error(\"删除失败\");\n      }\n    };\n\n    makeAutoObservable(this);\n  }\n\n}\n\nconst myStore = new Mobx();\nexport default myStore;","map":{"version":3,"sources":["/Users/wuliangrui/Desktop/库里泡/item/student/src/store/index.js"],"names":["makeAutoObservable","message","booksSearch","booksKind","booksKindSearch","login","register","borrowBook","returnBooksList","returnBooksListSuper","returnBook","getUsers","modifyUser","addUser","deleteUser","modifyBook","deleteBook","Mobx","constructor","bookName","booksPageNum","booksPageCount","booksData","booksSuperData","booksKindData","isSearch","returnBooksListData","usersListData","canSwitch","modifySwitchStatus","bool","modifyBookNumber","modifyId","map","item","id","number","data","event","code","token","reMessage","superuser","email","localStorage","setItem","username","success","error","books","num_pages","q","booksSearchRequest","booksSearchAdd","page","category","lists","warning","booksKindRequest","booksKindSearchRequest","pages","kindId","borrowBookRequest","returnBooksListRequest","JSON","parse","getItem","filter","status","returnBookRequest","getUsersRequest","modifyUserRequest","msg","addUserRequest","deleteUserRequest","modifyBookRequest","deleteBookRequest","myStore"],"mappings":"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","sourcesContent":["import {\n    makeAutoObservable\n} from \"mobx\";\nimport { message } from \"antd\";\nimport {\n    booksSearch,\n    booksKind,\n    booksKindSearch,\n    login, register,\n    borrowBook,\n    returnBooksList,\n    returnBooksListSuper,\n    returnBook,\n    getUsers,\n    modifyUser,\n    addUser,\n    deleteUser,\n    modifyBook,\n    deleteBook\n} from \"../services/index.js\";\n\nclass Mobx {\n    bookName = \"\"\n    booksPageNum = 2\n    booksPageCount = 0\n    booksData = []\n    booksSuperData = []\n    booksKindData = []\n    isSearch = true\n    returnBooksListData = []\n    usersListData = []\n    canSwitch = true\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    modifySwitchStatus = (bool) => {\n        this.canSwitch = bool;\n    }\n\n    modifyBookNumber = (modifyId) => {\n        this.booksData = this.booksData.map(item => {\n            const { id, number } = item;\n            if (modifyId === id) {\n                return {\n                    ...item,\n                    number: number - 1\n                }\n            } else {\n                return item;\n            }\n        })\n    }\n\n    login = async(data) => {\n        const event = await login(data);\n        const {\n            data: { \n                code, token,\n                message: reMessage,\n                superuser, email\n            }\n        } = event;\n\n        if (!code) {\n            localStorage.setItem(\"token\", token);\n            localStorage.setItem(\"superuser\", superuser);\n            localStorage.setItem(\"username\", data.username);\n            localStorage.setItem(\"email\", email);\n            message.success(\"登录成功\");\n            return true;\n        } else {\n            message.error(reMessage);\n            return false;\n        }\n    }\n\n    register = async(data) => {\n        const event = await register(data);\n        const {\n            data: { \n                code, token,\n                message: reMessage\n            }\n        } = event;\n\n        if (!code) {\n            localStorage.setItem(\"token\", token);\n            message.success(\"注册成功自动登录\");\n            return true;\n        } else {\n            message.error(reMessage);\n            return false;\n        }\n    }\n\n    booksSearch = async(data) => {\n        const event = await booksSearch(data);\n        const {\n            data: {\n                books, num_pages\n            }\n        } = event;\n\n        this.isSearch = true;\n        this.booksData = books;\n        this.booksPageNum = 2;\n        this.booksPageCount = num_pages + 1;\n        this.bookName = data.q;\n    }\n\n    booksSearchRequest = async(data) => {\n        const event = await booksSearch(data);\n        const {\n            data: {\n                books\n            }\n        } = event;\n\n        this.booksSuperData = books;\n    }\n\n    booksSearchAdd = async() => {\n        if (this.booksPageNum < this.booksPageCount) {\n            if (this.isSearch) {\n                const event = await booksSearch({\n                    q: this.bookName,\n                    page: this.booksPageNum\n                });\n    \n                const {\n                    data: {\n                        books\n                    }\n                } = event;\n\n                this.booksPageNum = this.booksPageNum + 1;\n                this.booksData = [...this.booksData, ...books];\n            } else {\n                const event = await booksKindSearch({\n                    category: this.category,\n                    page: this.booksPageNum\n                });\n    \n                const {\n                    data: {\n                        lists\n                    }\n                } = event;\n\n                this.booksPageNum = this.booksPageNum + 1;\n                this.booksData = [...this.booksData, ...lists];\n            }\n        } else {\n            message.warning(\"无更多书籍\");\n        }\n    }\n\n    booksKindRequest = async() => {\n        const event = await booksKind()\n\n        this.booksKindData = event.data;\n    }\n\n    booksKindSearchRequest = async(data) => {\n        const event = await booksKindSearch(data);\n        const {\n            data: {\n                lists, pages\n            }\n        } = event;\n\n        this.isSearch = false;\n        this.kindId = data.category;\n        this.booksData = lists;\n        this.booksPageCount = pages + 1;\n    }\n\n    borrowBookRequest = async(data) => {\n        const {\n            data: {\n                code,\n                message: reMessage\n            }\n        } =  await borrowBook(data);\n\n        if (!code) {\n            message.success(reMessage);\n        } else {\n            message.error(reMessage);\n        }\n    }\n\n    returnBooksListRequest = async() => {\n        const superuser = JSON.parse(localStorage.getItem(\"superuser\"));\n\n        if (superuser) {\n            const { data } = await returnBooksListSuper();\n\n            this.returnBooksListData = data.filter(item => !item.status);\n        } else {\n            const { data } = await returnBooksList();\n\n            this.returnBooksListData = data.filter(item => !item.status);\n        }\n    }\n\n    returnBookRequest = async(data) => {\n        const {\n            data: {\n                code,\n                message: reMessage\n            }\n        } = await returnBook(data);\n\n        if (!code) {\n            message.success(reMessage);\n        } else {\n            message.error(reMessage);\n        }\n    }\n\n    getUsersRequest = async() => {\n        const {\n            data\n        } = await getUsers();\n        \n        this.usersListData = data;\n    }\n\n    modifyUserRequest = async(data, id) => {\n        const {\n            data: {\n                code, msg\n            }\n        } = await modifyUser(data, id);\n\n        if (code) {\n            message.success(msg);\n        } else {\n            message.error(msg);\n        }\n    }\n\n    addUserRequest = async(data) => {\n        const {\n            data: {\n                code, msg\n            }\n        } = await addUser(data);\n        \n        if (code) {\n            message.success(msg);\n        } else {\n            message.error(msg);\n        }\n    }\n\n    deleteUserRequest = async(id) => {\n        const { status } = await deleteUser(id);\n        \n        if (status === 304 || status === 400 || status >= 200 && status < 300) {\n            message.success(\"删除成功\");\n        } else {\n            message.error(\"删除失败\");\n        }\n    }\n\n    modifyBookRequest = async(data, id) => {\n        const {\n            data: {\n                code, msg\n            }\n        } = await modifyBook(data, id);\n        \n        if (code) {\n            message.success(msg);\n        } else {\n            message.error(msg);\n        }\n    }\n\n    deleteBookRequest = async(id) => {\n        const { status } = await deleteBook(id);\n        \n        if (status === 304 || status === 400 || status >= 200 && status < 300) {\n            message.success(\"删除成功\");\n        } else {\n            message.error(\"删除失败\");\n        }\n    }\n}\n\nconst myStore = new Mobx();\nexport default myStore;\n\n"]},"metadata":{},"sourceType":"module"}