{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport { message } from \"antd\";\nimport { booksSearch, booksKind, booksKindSearch, login, register, borrowBook, returnBooksList, returnBooksListSuper, returnBook, getUsers, modifyUser, addUser, deleteUser, modifyBook, deleteBook } from \"../services/index.js\";\n\nclass Mobx {\n  constructor() {\n    this.bookName = \"\";\n    this.booksPageNum = 2;\n    this.booksPageCount = 0;\n    this.booksData = [];\n    this.booksKindData = [];\n    this.isSearch = true;\n    this.returnBooksListData = [];\n    this.usersListData = [];\n\n    this.login = async data => {\n      const event = await login(data);\n      const {\n        data: {\n          code,\n          token,\n          message: reMessage,\n          superuser\n        }\n      } = event;\n\n      if (!code) {\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"superuser\", superuser);\n        localStorage.setItem(\"username\", data.username);\n        message.success(\"登录成功\");\n        return true;\n      } else {\n        message.error(reMessage);\n        return false;\n      }\n    };\n\n    this.register = async data => {\n      const event = await register(data);\n      const {\n        data: {\n          code,\n          token,\n          message: reMessage\n        }\n      } = event;\n\n      if (!code) {\n        localStorage.setItem(\"token\", token);\n        message.success(\"注册成功自动登录\");\n        return true;\n      } else {\n        message.error(reMessage);\n        return false;\n      }\n    };\n\n    this.booksSearch = async data => {\n      const event = await booksSearch(data);\n      const {\n        data: {\n          books,\n          num_pages\n        }\n      } = event;\n      this.isSearch = true;\n      this.booksData = books;\n      this.booksPageNum = 2;\n      this.booksPageCount = num_pages + 1;\n      this.bookName = data.q;\n    };\n\n    this.booksSearchAdd = async () => {\n      if (this.booksPageNum < this.booksPageCount) {\n        if (this.isSearch) {\n          const event = await booksSearch({\n            q: this.bookName,\n            page: this.booksPageNum\n          });\n          const {\n            data: {\n              books\n            }\n          } = event;\n          this.booksPageNum = this.booksPageNum + 1;\n          this.booksData = [...this.booksData, ...books];\n        } else {\n          const event = await booksKindSearch({\n            category: this.category,\n            page: this.booksPageNum\n          });\n          const {\n            data: {\n              lists\n            }\n          } = event;\n          this.booksPageNum = this.booksPageNum + 1;\n          this.booksData = [...this.booksData, ...lists];\n        }\n      } else {\n        message.warning(\"无更多书籍\");\n      }\n    };\n\n    this.booksKindRequest = async () => {\n      const event = await booksKind();\n      this.booksKindData = event.data;\n    };\n\n    this.booksKindSearchRequest = async data => {\n      const event = await booksKindSearch(data);\n      const {\n        data: {\n          lists,\n          pages\n        }\n      } = event;\n      this.isSearch = false;\n      this.kindId = data.category;\n      this.booksData = lists;\n      this.booksPageCount = pages + 1;\n    };\n\n    this.borrowBookRequest = async data => {\n      const {\n        data: {\n          code,\n          message: reMessage\n        }\n      } = await borrowBook(data);\n\n      if (!code) {\n        message.success(reMessage);\n      } else {\n        message.error(reMessage);\n      }\n    };\n\n    this.returnBooksListRequest = async () => {\n      const superuser = JSON.parse(localStorage.getItem(\"superuser\"));\n\n      if (superuser) {\n        const {\n          data: {\n            lists\n          }\n        } = await returnBooksListSuper();\n        this.returnBooksListData = lists.filter(item => !item.status);\n      } else {\n        const {\n          data: {\n            lists\n          }\n        } = await returnBooksList();\n        this.returnBooksListData = lists.filter(item => !item.status);\n      }\n    };\n\n    this.returnBookRequest = async data => {\n      const {\n        data: {\n          code,\n          message: reMessage\n        }\n      } = await returnBook(data);\n\n      if (!code) {\n        message.success(reMessage);\n      } else {\n        message.error(reMessage);\n      }\n    };\n\n    this.getUsersRequest = async () => {\n      const {\n        data\n      } = await getUsers();\n      this.usersListData = data;\n    };\n\n    this.modifyUserRequest = async (data, id) => {\n      const {\n        data: {\n          code,\n          msg\n        }\n      } = await modifyUser(data, id);\n\n      if (code) {\n        message.success(msg);\n      } else {\n        message.error(msg);\n      }\n    };\n\n    this.addUserRequest = async data => {\n      const {\n        data: {\n          code,\n          msg\n        }\n      } = await addUser(data);\n\n      if (code) {\n        message.success(msg);\n      } else {\n        message.error(msg);\n      }\n    };\n\n    this.deleteUserRequest = async id => {\n      const {\n        status\n      } = await deleteUser(id);\n\n      if (status === 304 || status === 400 || status >= 200 && status < 300) {\n        message.success(\"删除成功\");\n      } else {\n        message.error(\"删除失败\");\n      }\n    };\n\n    this.modifyBookRequest = async (data, id) => {\n      const event = await modifyBook(data, id);\n      console.log(event);\n    };\n\n    this.deleteBookRequest = async id => {\n      const {\n        status\n      } = await deleteBook(id);\n\n      if (status === 304 || status === 400 || status >= 200 && status < 300) {\n        message.success(\"删除成功\");\n      } else {\n        message.error(\"删除失败\");\n      }\n    };\n\n    makeAutoObservable(this);\n  }\n\n}\n\nconst myStore = new Mobx();\nexport default myStore;","map":{"version":3,"sources":["/Users/wuliangrui/Desktop/库里泡/item/student/src/store/index.js"],"names":["makeAutoObservable","message","booksSearch","booksKind","booksKindSearch","login","register","borrowBook","returnBooksList","returnBooksListSuper","returnBook","getUsers","modifyUser","addUser","deleteUser","modifyBook","deleteBook","Mobx","constructor","bookName","booksPageNum","booksPageCount","booksData","booksKindData","isSearch","returnBooksListData","usersListData","data","event","code","token","reMessage","superuser","localStorage","setItem","username","success","error","books","num_pages","q","booksSearchAdd","page","category","lists","warning","booksKindRequest","booksKindSearchRequest","pages","kindId","borrowBookRequest","returnBooksListRequest","JSON","parse","getItem","filter","item","status","returnBookRequest","getUsersRequest","modifyUserRequest","id","msg","addUserRequest","deleteUserRequest","modifyBookRequest","console","log","deleteBookRequest","myStore"],"mappings":"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","sourcesContent":["import {\n    makeAutoObservable\n} from \"mobx\";\nimport { message } from \"antd\";\nimport {\n    booksSearch,\n    booksKind,\n    booksKindSearch,\n    login, register,\n    borrowBook,\n    returnBooksList,\n    returnBooksListSuper,\n    returnBook,\n    getUsers,\n    modifyUser,\n    addUser,\n    deleteUser,\n    modifyBook,\n    deleteBook\n} from \"../services/index.js\";\n\nclass Mobx {\n    bookName = \"\"\n    booksPageNum = 2\n    booksPageCount = 0\n    booksData = []\n    booksKindData = []\n    isSearch = true\n    returnBooksListData = []\n    usersListData = []\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    login = async(data) => {\n        const event = await login(data);\n        const {\n            data: { \n                code, token,\n                message: reMessage,\n                superuser\n            }\n        } = event;\n\n        if (!code) {\n            localStorage.setItem(\"token\", token);\n            localStorage.setItem(\"superuser\", superuser);\n            localStorage.setItem(\"username\", data.username);\n            message.success(\"登录成功\");\n            return true;\n        } else {\n            message.error(reMessage);\n            return false;\n        }\n    }\n\n    register = async(data) => {\n        const event = await register(data);\n        const {\n            data: { \n                code, token,\n                message: reMessage\n            }\n        } = event;\n\n        if (!code) {\n            localStorage.setItem(\"token\", token);\n            message.success(\"注册成功自动登录\");\n            return true;\n        } else {\n            message.error(reMessage);\n            return false;\n        }\n    }\n\n    booksSearch = async(data) => {\n        const event = await booksSearch(data);\n        const {\n            data: {\n                books, num_pages\n            }\n        } = event;\n\n        this.isSearch = true;\n        this.booksData = books;\n        this.booksPageNum = 2;\n        this.booksPageCount = num_pages + 1;\n        this.bookName = data.q;\n    }\n\n    booksSearchAdd = async() => {\n        if (this.booksPageNum < this.booksPageCount) {\n            if (this.isSearch) {\n                const event = await booksSearch({\n                    q: this.bookName,\n                    page: this.booksPageNum\n                });\n    \n                const {\n                    data: {\n                        books\n                    }\n                } = event;\n\n                this.booksPageNum = this.booksPageNum + 1;\n                this.booksData = [...this.booksData, ...books];\n            } else {\n                const event = await booksKindSearch({\n                    category: this.category,\n                    page: this.booksPageNum\n                });\n    \n                const {\n                    data: {\n                        lists\n                    }\n                } = event;\n\n                this.booksPageNum = this.booksPageNum + 1;\n                this.booksData = [...this.booksData, ...lists];\n            }\n        } else {\n            message.warning(\"无更多书籍\");\n        }\n    }\n\n    booksKindRequest = async() => {\n        const event = await booksKind()\n\n        this.booksKindData = event.data;\n    }\n\n    booksKindSearchRequest = async(data) => {\n        const event = await booksKindSearch(data);\n        const {\n            data: {\n                lists, pages\n            }\n        } = event;\n\n        this.isSearch = false;\n        this.kindId = data.category;\n        this.booksData = lists;\n        this.booksPageCount = pages + 1;\n    }\n\n    borrowBookRequest = async(data) => {\n        const {\n            data: {\n                code,\n                message: reMessage\n            }\n        } =  await borrowBook(data);\n\n        if (!code) {\n            message.success(reMessage);\n        } else {\n            message.error(reMessage);\n        }\n    }\n\n    returnBooksListRequest = async() => {\n        const superuser = JSON.parse(localStorage.getItem(\"superuser\"));\n\n        if (superuser) {\n            const {\n                data: {\n                    lists\n                }\n            } = await returnBooksListSuper();\n\n            this.returnBooksListData = lists.filter(item => !item.status);\n        } else {\n            const {\n                data: {\n                    lists\n                }\n            } = await returnBooksList();\n\n            this.returnBooksListData = lists.filter(item => !item.status);\n        }\n    }\n\n    returnBookRequest = async(data) => {\n        const {\n            data: {\n                code,\n                message: reMessage\n            }\n        } = await returnBook(data);\n\n        if (!code) {\n            message.success(reMessage);\n        } else {\n            message.error(reMessage);\n        }\n    }\n\n    getUsersRequest = async() => {\n        const {\n            data\n        } = await getUsers();\n        \n        this.usersListData = data;\n    }\n\n    modifyUserRequest = async(data, id) => {\n        const {\n            data: {\n                code, msg\n            }\n        } = await modifyUser(data, id);\n\n        if (code) {\n            message.success(msg);\n        } else {\n            message.error(msg);\n        }\n    }\n\n    addUserRequest = async(data) => {\n        const {\n            data: {\n                code, msg\n            }\n        } = await addUser(data);\n        \n        if (code) {\n            message.success(msg);\n        } else {\n            message.error(msg);\n        }\n    }\n\n    deleteUserRequest = async(id) => {\n        const { status } = await deleteUser(id);\n        \n        if (status === 304 || status === 400 || status >= 200 && status < 300) {\n            message.success(\"删除成功\");\n        } else {\n            message.error(\"删除失败\");\n        }\n    }\n\n    modifyBookRequest = async(data, id) => {\n        const event = await modifyBook(data, id);\n        console.log(event);\n    }\n\n    deleteBookRequest = async(id) => {\n        const { status } = await deleteBook(id);\n        \n        if (status === 304 || status === 400 || status >= 200 && status < 300) {\n            message.success(\"删除成功\");\n        } else {\n            message.error(\"删除失败\");\n        }\n    }\n}\n\nconst myStore = new Mobx();\nexport default myStore;\n\n"]},"metadata":{},"sourceType":"module"}