{"ast":null,"code":"function ajax(options) {\n  let result;\n  var defaults = {\n    type: 'get',\n    url: '',\n    data: {},\n    header: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    success: function () {},\n    error: function () {}\n  };\n  Object.assign(defaults, options);\n  var xhr = new XMLHttpRequest();\n  var params = '';\n\n  for (var attr in defaults.data) {\n    params += attr + '=' + defaults.data[attr] + '&';\n  }\n\n  params = params.substr(0, params.length - 1);\n\n  if (defaults.type == 'get') {\n    defaults.url = defaults.url + '?' + params;\n  }\n\n  xhr.open(defaults.type, defaults.url);\n\n  if (defaults.type == 'post') {\n    var contentType = defaults.header['Content-Type'];\n    xhr.setRequestHeader('Content-Type', contentType);\n\n    if (contentType == 'application/json') {\n      xhr.send(JSON.stringify(defaults.data));\n    } else {\n      xhr.send(params);\n    }\n  } else {\n    xhr.send();\n  }\n\n  xhr.onload = function () {\n    var ContentType = xhr.getResponseHeader('Content-Type');\n    var responseText = xhr.responseText;\n\n    if (ContentType.includes('application/json')) {\n      responseText = JSON.parse(responseText);\n    }\n\n    if (xhr.status == 200) {\n      // defaults.success(responseText, xhr);\n      result = responseText;\n      console.log(responseText);\n      return responseText;\n    } else {\n      // defaults.error(responseText, xhr)\n      return responseText;\n    }\n  };\n\n  return result;\n}\n\nexport default ajax;","map":{"version":3,"sources":["/Users/wuliangrui/Desktop/库里泡/item/student/src/utils/ajax.js"],"names":["ajax","options","result","defaults","type","url","data","header","success","error","Object","assign","xhr","XMLHttpRequest","params","attr","substr","length","open","contentType","setRequestHeader","send","JSON","stringify","onload","ContentType","getResponseHeader","responseText","includes","parse","status","console","log"],"mappings":"AAAA,SAASA,IAAT,CAAcC,OAAd,EAAuB;AACnB,MAAIC,MAAJ;AACA,MAAIC,QAAQ,GAAG;AACPC,IAAAA,IAAI,EAAE,KADC;AAEPC,IAAAA,GAAG,EAAE,EAFE;AAGPC,IAAAA,IAAI,EAAE,EAHC;AAIPC,IAAAA,MAAM,EAAE;AACJ,sBAAgB;AADZ,KAJD;AAOPC,IAAAA,OAAO,EAAE,YAAW,CAAE,CAPf;AAQPC,IAAAA,KAAK,EAAE,YAAW,CAAE;AARb,GAAf;AAUAC,EAAAA,MAAM,CAACC,MAAP,CAAcR,QAAd,EAAwBF,OAAxB;AAEA,MAAIW,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACA,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,IAAT,IAAiBZ,QAAQ,CAACG,IAA1B,EAAgC;AAC5BQ,IAAAA,MAAM,IAAIC,IAAI,GAAG,GAAP,GAAaZ,QAAQ,CAACG,IAAT,CAAcS,IAAd,CAAb,GAAmC,GAA7C;AACH;;AACDD,EAAAA,MAAM,GAAGA,MAAM,CAACE,MAAP,CAAc,CAAd,EAAiBF,MAAM,CAACG,MAAP,GAAgB,CAAjC,CAAT;;AACA,MAAId,QAAQ,CAACC,IAAT,IAAiB,KAArB,EAA4B;AACxBD,IAAAA,QAAQ,CAACE,GAAT,GAAeF,QAAQ,CAACE,GAAT,GAAe,GAAf,GAAqBS,MAApC;AACH;;AAEDF,EAAAA,GAAG,CAACM,IAAJ,CAASf,QAAQ,CAACC,IAAlB,EAAwBD,QAAQ,CAACE,GAAjC;;AACA,MAAIF,QAAQ,CAACC,IAAT,IAAiB,MAArB,EAA6B;AACzB,QAAIe,WAAW,GAAGhB,QAAQ,CAACI,MAAT,CAAgB,cAAhB,CAAlB;AACAK,IAAAA,GAAG,CAACQ,gBAAJ,CAAqB,cAArB,EAAqCD,WAArC;;AACA,QAAIA,WAAW,IAAI,kBAAnB,EAAuC;AACnCP,MAAAA,GAAG,CAACS,IAAJ,CAASC,IAAI,CAACC,SAAL,CAAepB,QAAQ,CAACG,IAAxB,CAAT;AACH,KAFD,MAEO;AACHM,MAAAA,GAAG,CAACS,IAAJ,CAASP,MAAT;AACH;AAEJ,GATD,MASO;AACHF,IAAAA,GAAG,CAACS,IAAJ;AACH;;AAEDT,EAAAA,GAAG,CAACY,MAAJ,GAAa,YAAW;AACpB,QAAIC,WAAW,GAAGb,GAAG,CAACc,iBAAJ,CAAsB,cAAtB,CAAlB;AACA,QAAIC,YAAY,GAAGf,GAAG,CAACe,YAAvB;;AACA,QAAIF,WAAW,CAACG,QAAZ,CAAqB,kBAArB,CAAJ,EAA8C;AAC1CD,MAAAA,YAAY,GAAGL,IAAI,CAACO,KAAL,CAAWF,YAAX,CAAf;AAEH;;AACD,QAAIf,GAAG,CAACkB,MAAJ,IAAc,GAAlB,EAAuB;AACnB;AACA5B,MAAAA,MAAM,GAAGyB,YAAT;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ;AACA,aAAOA,YAAP;AACH,KALD,MAKO;AACH;AACA,aAAOA,YAAP;AACH;AACJ,GAhBD;;AAkBA,SAAOzB,MAAP;AACH;;AAED,eAAeF,IAAf","sourcesContent":["function ajax(options) {\n    let result;\n    var defaults = {\n            type: 'get',\n            url: '',\n            data: {},\n            header: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            success: function() {},\n            error: function() {}\n        }\n    Object.assign(defaults, options);\n\n    var xhr = new XMLHttpRequest();\n    var params = '';\n    for (var attr in defaults.data) {\n        params += attr + '=' + defaults.data[attr] + '&';\n    }\n    params = params.substr(0, params.length - 1)\n    if (defaults.type == 'get') {\n        defaults.url = defaults.url + '?' + params;\n    }\n\n    xhr.open(defaults.type, defaults.url);\n    if (defaults.type == 'post') {\n        var contentType = defaults.header['Content-Type'];\n        xhr.setRequestHeader('Content-Type', contentType);\n        if (contentType == 'application/json') {\n            xhr.send(JSON.stringify(defaults.data))\n        } else {\n            xhr.send(params);\n        }\n\n    } else {\n        xhr.send();\n    }\n\n    xhr.onload = function() {\n        var ContentType = xhr.getResponseHeader('Content-Type');\n        var responseText = xhr.responseText;\n        if (ContentType.includes('application/json')) {\n            responseText = JSON.parse(responseText)\n\n        }\n        if (xhr.status == 200) {\n            // defaults.success(responseText, xhr);\n            result = responseText;\n            console.log(responseText)\n            return responseText;\n        } else {\n            // defaults.error(responseText, xhr)\n            return responseText;\n        }\n    }\n\n    return result;\n}\n\nexport default ajax;\n"]},"metadata":{},"sourceType":"module"}