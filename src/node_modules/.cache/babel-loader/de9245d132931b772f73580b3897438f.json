{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport { message } from \"antd\";\nimport { booksSearch, booksKind, booksKindSearch, login, register, borrowBook, returnBooksList, returnBook } from \"../services/index.js\";\n\nclass Mobx {\n  constructor() {\n    this.bookName = \"\";\n    this.booksPageNum = 2;\n    this.booksPageCount = 0;\n    this.booksData = [];\n    this.booksKindData = [];\n    this.isSearch = true;\n    this.returnBooksListData = [];\n\n    this.login = async data => {\n      const event = await login(data);\n      const {\n        data: {\n          code,\n          token,\n          message: reMessage\n        }\n      } = event;\n\n      if (!code) {\n        localStorage.setItem(\"token\", token);\n        message.success(\"登录成功\");\n        return true;\n      } else {\n        message.error(reMessage);\n        return false;\n      }\n    };\n\n    this.register = async data => {\n      const event = await register(data);\n      const {\n        data: {\n          code,\n          token,\n          message: reMessage\n        }\n      } = event;\n\n      if (!code) {\n        localStorage.setItem(\"token\", token);\n        message.success(\"注册成功自动登录\");\n        return true;\n      } else {\n        message.error(reMessage);\n        return false;\n      }\n    };\n\n    this.booksSearch = async data => {\n      const event = await booksSearch(data);\n      const {\n        data: {\n          books,\n          num_pages\n        }\n      } = event;\n      this.isSearch = true;\n      this.booksData = books;\n      this.booksPageNum = 2;\n      this.booksPageCount = num_pages + 1;\n      this.bookName = data.q;\n    };\n\n    this.booksSearchAdd = async () => {\n      if (this.booksPageNum < this.booksPageCount) {\n        if (this.isSearch) {\n          const event = await booksSearch({\n            q: this.bookName,\n            page: this.booksPageNum\n          });\n          const {\n            data: {\n              books\n            }\n          } = event;\n          this.booksPageNum = this.booksPageNum + 1;\n          this.booksData = [...this.booksData, ...books];\n        } else {\n          const event = await booksKindSearch({\n            category: this.category,\n            page: this.booksPageNum\n          });\n          const {\n            data: {\n              lists\n            }\n          } = event;\n          this.booksPageNum = this.booksPageNum + 1;\n          this.booksData = [...this.booksData, ...lists];\n        }\n      } else {\n        message.warning(\"无更多书籍\");\n      }\n    };\n\n    this.booksKindRequest = async () => {\n      const event = await booksKind();\n      this.booksKindData = event.data;\n    };\n\n    this.booksKindSearchRequest = async data => {\n      const event = await booksKindSearch(data);\n      const {\n        data: {\n          lists,\n          pages\n        }\n      } = event;\n      this.isSearch = false;\n      this.kindId = data.category;\n      this.booksData = lists;\n      this.booksPageCount = pages + 1;\n    };\n\n    this.borrowBookRequest = async data => {\n      const {\n        data: {\n          code,\n          message: reMessage\n        }\n      } = await borrowBook(data);\n\n      if (!code) {\n        message.success(reMessage);\n      } else {\n        message.error(reMessage);\n      }\n    };\n\n    this.returnBooksListRequest = async () => {\n      const {\n        data: {\n          lists\n        }\n      } = await returnBooksList();\n      console.log(lists);\n      this.returnBooksListData = lists;\n    };\n\n    this.returnBookRequest = async () => {\n      const event = await returnBook();\n      console.log(event);\n    };\n\n    makeAutoObservable(this, {});\n  }\n\n}\n\nconst myStore = new Mobx();\nexport default myStore;","map":{"version":3,"sources":["/Users/wuliangrui/Desktop/库里泡/item/student/src/store/index.js"],"names":["makeAutoObservable","message","booksSearch","booksKind","booksKindSearch","login","register","borrowBook","returnBooksList","returnBook","Mobx","constructor","bookName","booksPageNum","booksPageCount","booksData","booksKindData","isSearch","returnBooksListData","data","event","code","token","reMessage","localStorage","setItem","success","error","books","num_pages","q","booksSearchAdd","page","category","lists","warning","booksKindRequest","booksKindSearchRequest","pages","kindId","borrowBookRequest","returnBooksListRequest","console","log","returnBookRequest","myStore"],"mappings":"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","sourcesContent":["import {\n    makeAutoObservable\n} from \"mobx\";\nimport { message } from \"antd\";\nimport {\n    booksSearch,\n    booksKind,\n    booksKindSearch,\n    login, register,\n    borrowBook,\n    returnBooksList,\n    returnBook\n} from \"../services/index.js\";\n\nclass Mobx {\n    bookName = \"\"\n    booksPageNum = 2\n    booksPageCount = 0\n    booksData = []\n    booksKindData = []\n    isSearch = true\n    returnBooksListData = [];\n\n    constructor() {\n        makeAutoObservable(this, {\n\n        });\n    }\n\n    login = async(data) => {\n        const event = await login(data);\n        const {\n            data: { \n                code, token,\n                message: reMessage\n            }\n        } = event;\n\n        if (!code) {\n            localStorage.setItem(\"token\", token);\n            message.success(\"登录成功\");\n            return true;\n        } else {\n            message.error(reMessage);\n            return false;\n        }\n    }\n\n    register = async(data) => {\n        const event = await register(data);\n        const {\n            data: { \n                code, token,\n                message: reMessage\n            }\n        } = event;\n\n        if (!code) {\n            localStorage.setItem(\"token\", token);\n            message.success(\"注册成功自动登录\");\n            return true;\n        } else {\n            message.error(reMessage);\n            return false;\n        }\n    }\n\n    booksSearch = async(data) => {\n        const event = await booksSearch(data);\n        const {\n            data: {\n                books, num_pages\n            }\n        } = event;\n\n        this.isSearch = true;\n        this.booksData = books;\n        this.booksPageNum = 2;\n        this.booksPageCount = num_pages + 1;\n        this.bookName = data.q;\n    }\n\n    booksSearchAdd = async() => {\n        if (this.booksPageNum < this.booksPageCount) {\n            if (this.isSearch) {\n                const event = await booksSearch({\n                    q: this.bookName,\n                    page: this.booksPageNum\n                });\n    \n                const {\n                    data: {\n                        books\n                    }\n                } = event;\n\n                this.booksPageNum = this.booksPageNum + 1;\n                this.booksData = [...this.booksData, ...books];\n            } else {\n                const event = await booksKindSearch({\n                    category: this.category,\n                    page: this.booksPageNum\n                });\n    \n                const {\n                    data: {\n                        lists\n                    }\n                } = event;\n\n                this.booksPageNum = this.booksPageNum + 1;\n                this.booksData = [...this.booksData, ...lists];\n            }\n        } else {\n            message.warning(\"无更多书籍\");\n        }\n    }\n\n    booksKindRequest = async() => {\n        const event = await booksKind()\n\n        this.booksKindData = event.data;\n    }\n\n    booksKindSearchRequest = async(data) => {\n        const event = await booksKindSearch(data);\n        const {\n            data: {\n                lists, pages\n            }\n        } = event;\n\n        this.isSearch = false;\n        this.kindId = data.category;\n        this.booksData = lists;\n        this.booksPageCount = pages + 1;\n    }\n\n    borrowBookRequest = async(data) => {\n        const {\n            data: {\n                code,\n                message: reMessage\n            }\n        } =  await borrowBook(data);\n\n        if (!code) {\n            message.success(reMessage);\n        } else {\n            message.error(reMessage);\n        }\n    }\n\n    returnBooksListRequest = async() => {\n        const {\n            data: {\n                lists\n            }\n        } = await returnBooksList();\n        console.log(lists)\n\n        this.returnBooksListData = lists;\n    }\n\n    returnBookRequest = async() => {\n        const event = await returnBook();\n        console.log(event);\n    }\n}\n\nconst myStore = new Mobx();\nexport default myStore;\n\n"]},"metadata":{},"sourceType":"module"}