{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport { message } from \"antd\";\nimport { booksSearch, booksKind, booksKindSearch, login, register, borrowBook, returnBooksList, returnBooksListSuper, returnBook } from \"../services/index.js\";\n\nclass Mobx {\n  constructor() {\n    this.bookName = \"\";\n    this.booksPageNum = 2;\n    this.booksPageCount = 0;\n    this.booksData = [];\n    this.booksKindData = [];\n    this.isSearch = true;\n    this.returnBooksListData = [];\n\n    this.login = async data => {\n      const event = await login(data);\n      const {\n        data: {\n          code,\n          token,\n          message: reMessage,\n          superuser\n        }\n      } = event;\n\n      if (!code) {\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"superuser\", superuser);\n        localStorage.setItem(\"username\", data.username);\n        message.success(\"登录成功\");\n        return true;\n      } else {\n        message.error(reMessage);\n        return false;\n      }\n    };\n\n    this.register = async data => {\n      const event = await register(data);\n      const {\n        data: {\n          code,\n          token,\n          message: reMessage\n        }\n      } = event;\n\n      if (!code) {\n        localStorage.setItem(\"token\", token);\n        message.success(\"注册成功自动登录\");\n        return true;\n      } else {\n        message.error(reMessage);\n        return false;\n      }\n    };\n\n    this.booksSearch = async data => {\n      const event = await booksSearch(data);\n      const {\n        data: {\n          books,\n          num_pages\n        }\n      } = event;\n      this.isSearch = true;\n      this.booksData = books;\n      this.booksPageNum = 2;\n      this.booksPageCount = num_pages + 1;\n      this.bookName = data.q;\n    };\n\n    this.booksSearchAdd = async () => {\n      if (this.booksPageNum < this.booksPageCount) {\n        if (this.isSearch) {\n          const event = await booksSearch({\n            q: this.bookName,\n            page: this.booksPageNum\n          });\n          const {\n            data: {\n              books\n            }\n          } = event;\n          this.booksPageNum = this.booksPageNum + 1;\n          this.booksData = [...this.booksData, ...books];\n        } else {\n          const event = await booksKindSearch({\n            category: this.category,\n            page: this.booksPageNum\n          });\n          const {\n            data: {\n              lists\n            }\n          } = event;\n          this.booksPageNum = this.booksPageNum + 1;\n          this.booksData = [...this.booksData, ...lists];\n        }\n      } else {\n        message.warning(\"无更多书籍\");\n      }\n    };\n\n    this.booksKindRequest = async () => {\n      const event = await booksKind();\n      this.booksKindData = event.data;\n    };\n\n    this.booksKindSearchRequest = async data => {\n      const event = await booksKindSearch(data);\n      const {\n        data: {\n          lists,\n          pages\n        }\n      } = event;\n      this.isSearch = false;\n      this.kindId = data.category;\n      this.booksData = lists;\n      this.booksPageCount = pages + 1;\n    };\n\n    this.borrowBookRequest = async data => {\n      const {\n        data: {\n          code,\n          message: reMessage\n        }\n      } = await borrowBook(data);\n\n      if (!code) {\n        message.success(reMessage);\n      } else {\n        message.error(reMessage);\n      }\n    };\n\n    this.returnBooksListRequest = async () => {\n      const superuser = JSON.parse(localStorage.getItem(\"superuser\"));\n\n      if (superuser) {\n        const {\n          data: {\n            lists\n          }\n        } = await returnBooksListSuper();\n        this.returnBooksListData = lists.filter(item => !item.status);\n      } else {\n        const {\n          data: {\n            lists\n          }\n        } = await returnBooksList();\n        this.returnBooksListData = lists.filter(item => !item.status);\n      }\n    };\n\n    this.returnBookRequest = async data => {\n      const {\n        data: {\n          code,\n          message: reMessage\n        }\n      } = await returnBook(data);\n\n      if (!code) {\n        message.success(reMessage);\n      } else {\n        message.error(reMessage);\n      }\n    };\n\n    makeAutoObservable(this);\n  }\n\n}\n\nconst myStore = new Mobx();\nexport default myStore;","map":{"version":3,"sources":["/Users/wuliangrui/Desktop/库里泡/item/student/src/store/index.js"],"names":["makeAutoObservable","message","booksSearch","booksKind","booksKindSearch","login","register","borrowBook","returnBooksList","returnBooksListSuper","returnBook","Mobx","constructor","bookName","booksPageNum","booksPageCount","booksData","booksKindData","isSearch","returnBooksListData","data","event","code","token","reMessage","superuser","localStorage","setItem","username","success","error","books","num_pages","q","booksSearchAdd","page","category","lists","warning","booksKindRequest","booksKindSearchRequest","pages","kindId","borrowBookRequest","returnBooksListRequest","JSON","parse","getItem","filter","item","status","returnBookRequest","myStore"],"mappings":"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","sourcesContent":["import {\n    makeAutoObservable\n} from \"mobx\";\nimport { message } from \"antd\";\nimport {\n    booksSearch,\n    booksKind,\n    booksKindSearch,\n    login, register,\n    borrowBook,\n    returnBooksList,\n    returnBooksListSuper,\n    returnBook\n} from \"../services/index.js\";\n\nclass Mobx {\n    bookName = \"\"\n    booksPageNum = 2\n    booksPageCount = 0\n    booksData = []\n    booksKindData = []\n    isSearch = true\n    returnBooksListData = []\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    login = async(data) => {\n        const event = await login(data);\n        const {\n            data: { \n                code, token,\n                message: reMessage,\n                superuser\n            }\n        } = event;\n\n        if (!code) {\n            localStorage.setItem(\"token\", token);\n            localStorage.setItem(\"superuser\", superuser);\n            localStorage.setItem(\"username\", data.username);\n            message.success(\"登录成功\");\n            return true;\n        } else {\n            message.error(reMessage);\n            return false;\n        }\n    }\n\n    register = async(data) => {\n        const event = await register(data);\n        const {\n            data: { \n                code, token,\n                message: reMessage\n            }\n        } = event;\n\n        if (!code) {\n            localStorage.setItem(\"token\", token);\n            message.success(\"注册成功自动登录\");\n            return true;\n        } else {\n            message.error(reMessage);\n            return false;\n        }\n    }\n\n    booksSearch = async(data) => {\n        const event = await booksSearch(data);\n        const {\n            data: {\n                books, num_pages\n            }\n        } = event;\n\n        this.isSearch = true;\n        this.booksData = books;\n        this.booksPageNum = 2;\n        this.booksPageCount = num_pages + 1;\n        this.bookName = data.q;\n    }\n\n    booksSearchAdd = async() => {\n        if (this.booksPageNum < this.booksPageCount) {\n            if (this.isSearch) {\n                const event = await booksSearch({\n                    q: this.bookName,\n                    page: this.booksPageNum\n                });\n    \n                const {\n                    data: {\n                        books\n                    }\n                } = event;\n\n                this.booksPageNum = this.booksPageNum + 1;\n                this.booksData = [...this.booksData, ...books];\n            } else {\n                const event = await booksKindSearch({\n                    category: this.category,\n                    page: this.booksPageNum\n                });\n    \n                const {\n                    data: {\n                        lists\n                    }\n                } = event;\n\n                this.booksPageNum = this.booksPageNum + 1;\n                this.booksData = [...this.booksData, ...lists];\n            }\n        } else {\n            message.warning(\"无更多书籍\");\n        }\n    }\n\n    booksKindRequest = async() => {\n        const event = await booksKind()\n\n        this.booksKindData = event.data;\n    }\n\n    booksKindSearchRequest = async(data) => {\n        const event = await booksKindSearch(data);\n        const {\n            data: {\n                lists, pages\n            }\n        } = event;\n\n        this.isSearch = false;\n        this.kindId = data.category;\n        this.booksData = lists;\n        this.booksPageCount = pages + 1;\n    }\n\n    borrowBookRequest = async(data) => {\n        const {\n            data: {\n                code,\n                message: reMessage\n            }\n        } =  await borrowBook(data);\n\n        if (!code) {\n            message.success(reMessage);\n        } else {\n            message.error(reMessage);\n        }\n    }\n\n    returnBooksListRequest = async() => {\n        const superuser = JSON.parse(localStorage.getItem(\"superuser\"));\n\n        if (superuser) {\n            const {\n                data: {\n                    lists\n                }\n            } = await returnBooksListSuper();\n\n            this.returnBooksListData = lists.filter(item => !item.status);\n        } else {\n            const {\n                data: {\n                    lists\n                }\n            } = await returnBooksList();\n\n            this.returnBooksListData = lists.filter(item => !item.status);\n        }\n    }\n\n    returnBookRequest = async(data) => {\n        const {\n            data: {\n                code,\n                message: reMessage\n            }\n        } = await returnBook(data);\n\n        if (!code) {\n            message.success(reMessage);\n        } else {\n            message.error(reMessage);\n        }\n    }\n}\n\nconst myStore = new Mobx();\nexport default myStore;\n\n"]},"metadata":{},"sourceType":"module"}